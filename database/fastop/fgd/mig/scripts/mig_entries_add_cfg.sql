DECLARE
    CURSOR c_data IS
    WITH t AS (SELECT RULE_SID AS OLD_ENTRY_SID, NULL AS DESCR, NULL AS IS_MONITORING, NULL AS IFI_MAIN_ABRV, IS_AMBITIOUS, 'FGD_NFR_RULES' AS TAB FROM FGD_NFR_RULES
    UNION
    SELECT INSTITUTION_SID AS OLD_ENTRY_SID, DESCR , IS_MONITORING, IFI_MAIN_ABRV, NULL AS IS_AMBITIOUS, 'FGD_IFI_INSTITUTIONS' AS TAB FROM FGD_IFI_INSTITUTIONS)
    SELECT e.NEW_SID AS ENTRY_SID,  t.DESCR, t.IS_MONITORING, t.IFI_MAIN_ABRV, t.IS_AMBITIOUS 
         ,CASE
            WHEN t.TAB = 'FGD_NFR_RULES' THEN 'NFR'
            ELSE 'IFI'
          END AS APP_ID
      FROM t, ENTRIES_MIG e
     WHERE e.OLD_SID = t.OLD_ENTRY_SID
       AND t.TAB = e.OLD_TABLE;
BEGIN
    FOR rec IN c_data LOOP
        INSERT INTO ENTRIES_ADD_CFG(ENTRY_SID, APP_ID, DESCR, IS_MONITORING, IFI_MAIN_ABRV, IS_AMBITIOUS)
        VALUES (rec.ENTRY_SID, rec.APP_ID, rec.DESCR, rec.IS_MONITORING, rec.IFI_MAIN_ABRV, rec.IS_AMBITIOUS);
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        LOG_FAIL('ENTRIES_ADD_CFG', sysdate, sqlerrm(), 0);
END;
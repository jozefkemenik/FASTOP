/* Formatted on 07-07-2020 17:24:12 (QP5 v5.313) */
ALTER TABLE TASK_LOGS
   DROP PRIMARY KEY CASCADE;

DROP TABLE TASK_LOGS CASCADE CONSTRAINTS;
DROP SEQUENCE TASK_LOGS_SEQ;

CREATE TABLE TASK_LOGS(
   TASK_LOG_SID     NUMBER(14) CONSTRAINT TASK_LOGS_PK PRIMARY KEY
 , TASK_RUN_SID     NUMBER(12)
                    NOT NULL
                    CONSTRAINT TASK_LOGS_RUN_FK
                    REFERENCES TASK_RUNS(TASK_RUN_SID) ON DELETE CASCADE
 , STEP_NUMBER      NUMBER(4) NOT NULL
 , STEP_DESCR       VARCHAR2(100)
 , STEP_STATUS_SID  NUMBER(8)
                    NOT NULL
                    CONSTRAINT TASK_LOGS_STATUS_FK
                    REFERENCES TASK_STATUSES(TASK_STATUS_SID)
 , STEP_TIMESTAMP   TIMESTAMP
 , STEP_MESSAGE     VARCHAR2(4000)
 , STEP_EXCEPTIONS  NUMBER(8) DEFAULT 0
 , STEP_TYPE_SID    NUMBER(4)
                    CONSTRAINT TASK_LOGS_STEP_TYPE_FK
                    REFERENCES TASK_STEP_TYPES(TASK_STEP_TYPE_SID)
 , CONCURRENCY      NUMBER(4) DEFAULT 1
 , WORKERS_DONE     NUMBER(4) DEFAULT 0
 , CONSTRAINT TASK_LOGS_UNQ UNIQUE(TASK_RUN_SID, STEP_NUMBER)
);

CREATE SEQUENCE TASK_LOGS_SEQ;

CREATE OR REPLACE TRIGGER TASK_LOGS_TRG
   BEFORE INSERT
   ON TASK_LOGS
   FOR EACH ROW
BEGIN
   SELECT TASK_LOGS_SEQ.NEXTVAL INTO :NEW.TASK_LOG_SID FROM DUAL;
END;
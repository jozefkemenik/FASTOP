ALTER TABLE FDMS_UPLOAD_FILES
DROP PRIMARY KEY CASCADE;

DROP TABLE FDMS_UPLOAD_FILES CASCADE CONSTRAINTS;
DROP SEQUENCE FDMS_UPLOAD_FILES_SEQ;

CREATE TABLE FDMS_UPLOAD_FILES
(
     FILE_SID            NUMBER
                            CONSTRAINT FDMS_UPLOAD_FILES_PK PRIMARY KEY
,    APP_SID             NUMBER
                            NOT NULL
                            CONSTRAINT FDMS_UPLOAD_FILES_APP_FK
                            REFERENCES APPLICATIONS (APP_SID)
,    COUNTRY_ID          VARCHAR2(8 BYTE)
                            CONSTRAINT FDMS_UPLOAD_FILES_CTY_FK
                            REFERENCES GEO_AREAS(GEO_AREA_ID)
,    PROVIDER_SID        NUMBER(8)
                            NOT NULL
                            CONSTRAINT FDMS_UPLOAD_FILES_PRVDR_FK
                            REFERENCES FDMS_PROVIDERS(PROVIDER_SID)
,    ROUND_SID           NUMBER (8)
                            NOT NULL
                            CONSTRAINT FDMS_UPLOAD_FILES_ROUND_FK
                            REFERENCES ROUNDS (ROUND_SID)
,    STORAGE_SID         NUMBER (8)
                            NOT NULL
                            CONSTRAINT FDMS_UPLOAD_FILES_STORAGE_FK
                            REFERENCES STORAGES (STORAGE_SID)
,    CUST_TEXT_SID       NUMBER (8)
                             REFERENCES CUST_STORAGE_TEXTS (CUST_STORAGE_TEXT_SID)
,    FILE_NAME           VARCHAR2 (200 CHAR) NOT NULL
,    CONTENT_TYPE        VARCHAR2 (150 CHAR) NOT NULL
,    CONTENT             BLOB NOT NULL
,    LAST_CHANGE_DATE    DATE DEFAULT CURRENT_TIMESTAMP NOT NULL
,    LAST_CHANGE_USER    VARCHAR2 (20 CHAR)
);

CREATE SEQUENCE FDMS_UPLOAD_FILES_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER FDMS_UPLOAD_FILES_TRG
   BEFORE INSERT
   ON FDMS_UPLOAD_FILES
   FOR EACH ROW
BEGIN
    SELECT FDMS_UPLOAD_FILES_SEQ.NEXTVAL INTO :NEW.FILE_SID FROM DUAL;
END;

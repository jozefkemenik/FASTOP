ALTER TABLE FDMS_TCE_RESULTS
    DROP PRIMARY KEY CASCADE;

DROP TABLE FDMS_TCE_RESULTS CASCADE CONSTRAINTS;
DROP SEQUENCE FDMS_TCE_RESULTS_SEQ;

CREATE TABLE FDMS_TCE_RESULTS (
    TCE_RESULT_SID      NUMBER(38) CONSTRAINT FDMS_TCE_RESULTS_PK PRIMARY KEY
  , TCE_MATRIX_SID      NUMBER(38)
                        NOT NULL
                        CONSTRAINT FDMS_TCE_RESULTS_TCE_FK REFERENCES FDMS_TCE_MATRICES(TCE_MATRIX_SID)
  , EXPORTER_CTY_ID     VARCHAR2(8 BYTE)
                        NOT NULL
                        CONSTRAINT FDMS_TCE_RESULTS_EXP_CTY_FK REFERENCES GEO_AREAS(GEO_AREA_ID)
  , INDICATOR_SID       NUMBER(8)
                        NOT NULL
                        CONSTRAINT FDMS_TCE_RESULTS_IND_FK REFERENCES FDMS_INDICATORS(INDICATOR_SID)
  , DATA_TYPE           VARCHAR2(10 BYTE)
                        NOT NULL
                        CONSTRAINT FDMS_TCE_RESULTS_DATA_TYPE_FK REFERENCES FDMS_TCE_PARTNERS(PARTNER_ID)
  , START_YEAR          NUMBER(4) NOT NULL
  , TIMESERIE_DATA      VARCHAR2(4000 BYTE)
  , UPDATE_DATE         DATE
                        DEFAULT SYSDATE
  , UPDATE_USER         VARCHAR2(16 BYTE)
,  CONSTRAINT FDMS_TCE_RESULTS_UNQ UNIQUE (TCE_MATRIX_SID, EXPORTER_CTY_ID, INDICATOR_SID, DATA_TYPE)
);
/
CREATE SEQUENCE FDMS_TCE_RESULTS_SEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER FDMS_TCE_RESULTS_TRG
    BEFORE INSERT
    ON FDMS_TCE_RESULTS
    FOR EACH ROW
BEGIN
    SELECT FDMS_TCE_RESULTS_SEQ.NEXTVAL INTO :NEW.TCE_RESULT_SID FROM DUAL;
END;
/

ALTER TABLE NOTIFICATION_LOGS
DROP PRIMARY KEY CASCADE;

DROP TABLE NOTIFICATION_LOGS;
DROP SEQUENCE NOTIFICATION_LOGS_SID_SEQ;

CREATE TABLE NOTIFICATION_LOGS
(
       LOG_SID              NUMBER (8) CONSTRAINT NOTIFICATION_LOGS_PK PRIMARY KEY
    ,  PROVIDER             VARCHAR2 (10 BYTE) NOT NULL
                                               CONSTRAINT NOTIFICATION_LOGS_PROVIDER_CHECK CHECK (PROVIDER IN ('MAIL', 'CNS'))
    ,  SENDER_APP           VARCHAR2 (30 BYTE)
    ,  RECIPIENTS           VARCHAR2 (1000 BYTE)
    ,  CC_RECIPIENTS        VARCHAR2 (1000 BYTE)
    ,  BCC_RECIPIENTS       VARCHAR2 (1000 BYTE)
    ,  SUBJECT              VARCHAR2 (1000 BYTE)
    ,  BODY                 VARCHAR2 (2000 BYTE)
    ,  ROUND_SID            NUMBER(8) NOT NULL
                                      CONSTRAINT NOTIFICATION_LOGS_RND_FK REFERENCES ROUNDS(ROUND_SID)
    ,  STORAGE_SID          NUMBER(8) NOT NULL
                                      CONSTRAINT NOTIFICATION_LOGS_STRG_FK REFERENCES STORAGES(STORAGE_SID)
    ,  USER_ID              VARCHAR2 (30 BYTE) NOT NULL
    ,  RESULT               CLOB
    ,  FAILED               NUMBER (1) DEFAULT 0 NOT NULL
                                       CONSTRAINT NOTIFICATION_LOGS_FAILED_CHECK CHECK (FAILED IN (0, 1))
    ,  SEND_DATE   DATE DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE SEQUENCE NOTIFICATION_LOGS_SID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER NOTIFICATION_LOGS_TRG
   BEFORE INSERT
   ON NOTIFICATION_LOGS
   FOR EACH ROW
BEGIN
   SELECT NOTIFICATION_LOGS_SID_SEQ.NEXTVAL INTO :NEW.LOG_SID FROM DUAL;
END;

import { EApps } from 'config'

import { DashboardApi } from '../api/dashboard.api'
import { ETemplateTypes } from '../../../shared-lib/dist/prelib/files'
import { IBinaryFile } from './shared-interfaces'

export class TemplateController {

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Instance Members ///////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Constructor ////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    constructor(private readonly appId: EApps) {}

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Public Methods /////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /**********************************************************************************************
     * @method getActiveTemplate
     *********************************************************************************************/
    public getActiveTemplate(templateId: ETemplateTypes): Promise<IBinaryFile> {
        return DashboardApi.getActiveTemplate(this.appId, templateId)
    }
}

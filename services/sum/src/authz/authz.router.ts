import { NextFunction, Request, Response, Router } from 'express'

import { BaseRouter } from '../../../lib/dist/base-router'

import { AuthzController } from './authz.controller'
import { AuthzService } from './authz.service'

export class AuthzRouter extends BaseRouter {

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Static Members /////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /**********************************************************************************************
     * @method createRouter factory function to create an instance of AuthzRouter
     *********************************************************************************************/
    public static createRouter(): Router {
        return new AuthzRouter().buildRouter()
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Instance Members ///////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    private controller: AuthzController

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Constructor ////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    constructor() {
        super()
        this.controller = new AuthzController(new AuthzService())
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Protected Methods //////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /**********************************************************************************************
     * @method configRoutes routes configuration for the AuthzRouter
     *********************************************************************************************/
    protected configRoutes(router: Router): Router {
        return router
            .get('/countries', this.getCountriesHandler.bind(this))
            .get('/groups', this.getGroupsHandler.bind(this))
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Private Methods ////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /**********************************************************************************************
     * @method getCountriesHandler
     *********************************************************************************************/
    private getCountriesHandler(req: Request, res: Response, next: NextFunction) {
        this.controller.getAuthzCountries()
            .then(res.json.bind(res), next)
    }

    /**********************************************************************************************
     * @method getGroupsHandler
     *********************************************************************************************/
    private getGroupsHandler(req: Request, res: Response, next: NextFunction) {
        this.controller.getAuthzGroups()
            .then(res.json.bind(res), next)
    }
}

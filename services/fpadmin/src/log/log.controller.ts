import { IAccessLog } from './shared-interfaces'
import { IDBAccessLog } from '.'
import { LogService } from './log.service'


export class LogController {

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Instance Members ///////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Constructor ////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    constructor(private statsService: LogService) {}

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Public Methods /////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /**********************************************************************************************
     * @method getAccessLogs
     *********************************************************************************************/
    public async getAccessLogs(): Promise<IAccessLog[]> {
        return this.statsService.getAccessLogs().then(this.toAccessLog)
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////// Private Methods ////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    /**********************************************************************************************
     * @method toAccessLog
     *********************************************************************************************/
    private toAccessLog(dbArray: IDBAccessLog[]): IAccessLog[] {
        return dbArray.map(r => ({
            userId: r.USER_ID,
            app: r.APP,
            uri: r.URI,
            isIntragate: r.INTRAGATE === 1,
            latestIp: r.LATEST_IP,
            latestAccess: r.LATEST_ACCESS_DATE,
        }))
    }
}
